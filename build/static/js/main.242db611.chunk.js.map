{"version":3,"sources":["MissionTracker/src/assets/images/close.svg","MissionTracker/src/components/MissionTracker/Todo.js","MissionTracker/src/components/MissionTracker/AddNewTodo.js","MissionTracker/src/components/MissionTracker/TodoList.js","MissionTracker/src/components/MissionTracker/MissionTracker.js","App.js","index.js"],"names":["Todo","todo","onToggleTodo","onDeleteTodo","onEditTodo","onContextMenuItemClick","contextMenuOpenerId","labelRef","useRef","useState","isContextMenuOpen","setContextMenuVisibility","isInEditMode","setEditMode","label","setLabel","onEditClick","onCheckClick","id","useEffect","name","current","focus","editClass","checkedClass","complete","className","onClick","e","preventDefault","style","display","type","checked","readOnly","tabIndex","onBlur","ref","contentEditable","suppressContentEditableWarning","onInput","currentTarget","textContent","isOpenClass","title","renderContextMenu","AddNewTodo","props","checkboxRef","onChange","onAddTodo","setTimeout","scrollIntoView","TodoList","setContextMenuOpenerId","todos","map","MissionTracker","onCloseClick","toggleTodo","newTodos","state","find","setState","addTodo","Math","round","random","deleteTodo","filter","editTodo","newLabel","index","findIndex","splice","isChecked","src","closeIcon","alt","this","renderHeader","renderBody","renderFooter","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAAe,G,MAAA,IAA0B,mC,cCG1B,SAASA,EAAT,GAQd,IAP+BC,EAOhC,EAPgCA,KACAC,EAMhC,EANgCA,aACAC,EAKhC,EALgCA,aACAC,EAIhC,EAJgCA,WACAC,EAGhC,EAHgCA,uBAGhC,IAFgCC,2BAEhC,MAFsD,KAEtD,EAEQC,EAAWC,iBAAO,MAF1B,EAGwDC,oBAAS,GAHjE,mBAGSC,EAHT,KAG4BC,EAH5B,OAIsCF,oBAAS,GAJ/C,mBAISG,EAJT,KAIuBC,EAJvB,OAK4BJ,mBAAS,IALrC,mBAKSK,EALT,KAKgBC,EALhB,KAwBE,SAASC,IACPH,GAAY,GAGd,SAASI,IACPf,EAAaD,EAAKiB,IAClBP,GAAyB,GAvB3BQ,qBAAU,WACRJ,EAASd,EAAKmB,QACb,IAEHD,qBAAU,WACJb,IAAwBL,EAAKiB,IAC7BP,GAAyB,KAE5B,CAACL,IAGJa,qBAAU,WACJP,GACAL,EAASc,QAAQC,UAEpB,CAACV,IAgDJ,IAAMW,EAAYX,EAAe,qCAAuC,GAClEY,EAAevB,EAAKwB,SAAW,UAAY,GAEjD,OACE,sBAAKC,UAAU,+BAAf,UACI,qBAAKA,UAAS,oDAA+CF,KAC7D,sBAAKE,UAAU,6CAAf,UACI,wBAAOA,UAAU,wCAAwCC,QAzBnE,SAAyBC,GACvBA,EAAEC,iBACFxB,EAAuBJ,EAAKiB,IAC5BP,GAA0BD,IAsBlB,UACI,uBAAOoB,MAAO,CAACC,QAAQ,QAASC,KAAK,WAAWC,QAAShC,EAAKwB,SAAUS,UAAQ,IAChF,qBAAKR,UAAS,+CAA0CF,QAE5D,sBAAME,UAAS,oCAA+BH,GACxCY,UAAW,EACXC,OAzBhB,WACMxB,IACAC,GAAY,GACZT,EAAWH,EAAKiB,GAAIJ,GACpBH,GAAyB,KAsBf0B,IAAK9B,EACL+B,gBAAiB1B,EACjB2B,gCAAgC,EAChCC,QArBhB,SAA0BZ,GACxBb,EAASa,EAAEa,cAAcC,cAcjB,SAOWzC,EAAKmB,UAvD1B,WAEE,IAAMuB,EAAcjC,EAAoB,oCAAsC,GAE9E,OACI,sBAAKgB,UAAS,+CAA0CiB,GAAxD,UACI,sBAAMjB,UAAU,4CAA4CC,QAAS,kBAAMxB,EAAaF,EAAKiB,KAA7F,SACI,sBAAMQ,UAAU,6EAA6EkB,MAAM,aAEvG,sBAAMlB,UAAU,4CAA4CC,QAASX,EAArE,SACI,sBAAMU,UAAU,2EAA2EkB,MAAM,WAErG,sBAAMlB,UAAU,4CAA4CC,QAASV,EAArE,SACI,sBAAMS,UAAU,4EAA4EkB,MAAM,eA6CzGC,MCnGM,SAASC,EAAWC,GAEjC,IAAMC,EAAcxC,iBAAO,MAO3B,OACE,sBAAKkB,UAAU,+BAA+BW,IAAKW,EAAnD,UACI,qBAAKtB,UAAU,8CACf,gCACI,wBAAOA,UAAU,wCAAjB,UACI,uBAAOI,MAAO,CAACC,QAAQ,QAASC,KAAK,WAAWiB,SAV9D,WACEF,EAAMG,YACNC,YAAW,kBAAIH,EAAY3B,QAAQ+B,mBAAkB,IAQiClB,UAAQ,IAClF,qBAAKR,UAAU,yDAEnB,sBAAMA,UAAU,4BAAhB,SAA6C,WCf1C,SAAS2B,EAASN,GAAQ,IAAD,EAEgBtC,mBAAS,MAFzB,mBAE/BH,EAF+B,KAEVgD,EAFU,KAUtC,OACI,sBAAK5B,UAAU,wBAAf,UAEMqB,EAAMQ,MAAMC,KAAI,SAAAvD,GAAI,OAAI,cAACD,EAAD,CAEEE,aAAc6C,EAAM7C,aACpBE,WAAY2C,EAAM3C,WAClBD,aAAc4C,EAAM5C,aACpBG,oBAAqBA,EACrBD,uBAAwB,SAACa,GAAD,OAAQoC,EAAuBpC,IACvDjB,KAAMA,GANDA,EAAKiB,OAStC,cAAC4B,EAAD,CAAYI,UAAWH,EAAMG,e,ICvBlBO,E,kDAEjB,WAAYV,GAAQ,IAAD,8BACf,cAAMA,IAsBVW,aAAe,aAvBI,EAwCnBC,WAAa,SAACzC,GACV,IAAM0C,EAAQ,YAAO,EAAKC,MAAMN,OAC1BtD,EAAO2D,EAASE,MAAK,SAAA7D,GAAI,OAAIA,EAAKiB,KAAOA,KAC/CjB,EAAKwB,UAAYxB,EAAKwB,SACtB,EAAKsC,SAAS,CAACR,MAAOK,KA5CP,EA+CnBI,QAAU,WACN,EAAKD,SAAS,CACVR,MAAM,GAAD,mBACE,EAAKM,MAAMN,OADb,CAED,CACIrC,GAAI+C,KAAKC,MAAsB,IAAhBD,KAAKE,UACpB/C,KAAM,oBACNK,UAAU,QAtDP,EA2DnB2C,WAAa,SAAAlD,GACT,IAAM0C,EAAW,EAAKC,MAAMN,MAAMc,QAAO,SAAApE,GAAI,OAAIiB,IAAOjB,EAAKiB,MAC7D,EAAK6C,SAAS,CAACR,MAAOK,KA7DP,EAgEnBU,SAAW,SAACpD,EAAIqD,GAAc,IACnBhB,EAAS,EAAKM,MAAdN,MAEDiB,EAAQjB,EAAMkB,WAAU,SAAAxE,GAAI,OAAIiB,IAAOjB,EAAKiB,MAElDqC,EAAMiB,GAAOpD,KAAOmD,EAEpBhB,EAAMmB,OAAOF,EAAO,EAAGjB,EAAMiB,IAE7B,EAAKT,SAAS,CAACR,WAvEf,EAAKM,MAAQ,CACTN,MAAO,CACH,CACInC,KAAM,sBACNF,GAAI,EACJyD,WAAW,GAEf,CACIvD,KAAM,iBACNF,GAAI,EACJyD,WAAW,GAEf,CACIvD,KAAM,qBACNF,GAAI,EACJyD,WAAW,KAjBR,E,gDA2BnB,WAGI,OACI,sBAAKjD,UAAU,yBAAf,UACI,sBAAMA,UAAU,+BAAhB,mBAJS,UAIT,uBACA,wBAAQA,UAAU,4BAAlB,SACI,qBAAKA,UAAU,gCAAgCkD,IAAKC,EAAWC,IAAI,QAAQnD,QAASoD,KAAKrB,sB,wBA0CzG,WACI,OACI,qBAAKhC,UAAU,uBAAf,SACI,cAAC2B,EAAD,CAAUE,MAAOwB,KAAKlB,MAAMN,MACxBrD,aAAc6E,KAAKpB,WACnBxD,aAAc4E,KAAKX,WACnBhE,WAAY2E,KAAKT,SACjBpB,UAAW6B,KAAKf,c,0BAMhC,WACI,OACI,sBAAKtC,UAAU,yBAAf,UACI,wBAAQA,UAAU,yBAAlB,oBACA,wBAAQA,UAAU,wDAAlB,mBACA,wBAAQA,UAAU,wDAAlB,uB,oBAKZ,WACI,OACI,sBAAKA,UAAU,0BAAf,UACKqD,KAAKC,eACLD,KAAKE,aACLF,KAAKG,sB,GA1GsBC,aCM7BC,MARf,WACE,OACE,qBAAK1D,UAAU,MAAf,SACI,cAAC,EAAD,OCDR2D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.242db611.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/close.cab345e7.svg\";","import React from 'react'\r\nimport {useState, useEffect, useRef} from 'react';\r\n\r\nexport default function Todo({ \r\n                                todo, \r\n                                onToggleTodo, \r\n                                onDeleteTodo, \r\n                                onEditTodo,\r\n                                onContextMenuItemClick,\r\n                                contextMenuOpenerId = null\r\n                            }) \r\n{\r\n\r\n  const labelRef = useRef(null);\r\n  const [isContextMenuOpen, setContextMenuVisibility] = useState(false);\r\n  const [isInEditMode, setEditMode] = useState(false);\r\n  const [label, setLabel] = useState('');\r\n\r\n  useEffect(() => {\r\n    setLabel(todo.name);    \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (contextMenuOpenerId !== todo.id) {\r\n        setContextMenuVisibility(false);\r\n    }\r\n  }, [contextMenuOpenerId])\r\n\r\n\r\n  useEffect(() => {\r\n    if (isInEditMode) {\r\n        labelRef.current.focus();\r\n    }\r\n  }, [isInEditMode])\r\n\r\n  function onEditClick() {\r\n    setEditMode(true)    \r\n  }\r\n\r\n  function onCheckClick() {\r\n    onToggleTodo(todo.id);\r\n    setContextMenuVisibility(false);    \r\n  }\r\n\r\n  function renderContextMenu() {\r\n\r\n    const isOpenClass = isContextMenuOpen ? 'mission-tracker-context-menu-open' : '';\r\n\r\n    return (\r\n        <div className={`mission-tracker-context-menu-wrapper ${isOpenClass}`}>\r\n            <span className='mission-tracker-context-menu-item-wrapper' onClick={() => onDeleteTodo(todo.id)}>\r\n                <span className='mission-tracker-context-menu-item mission-tracker-context-menu-item-delete' title='remove'></span>\r\n            </span>\r\n            <span className='mission-tracker-context-menu-item-wrapper' onClick={onEditClick}>\r\n                <span className='mission-tracker-context-menu-item mission-tracker-context-menu-item-edit' title='edit'></span>\r\n            </span>\r\n            <span className='mission-tracker-context-menu-item-wrapper' onClick={onCheckClick}>\r\n                <span className='mission-tracker-context-menu-item mission-tracker-context-menu-item-check' title='check'></span>\r\n            </span>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  function handleItemClick(e) {\r\n    e.preventDefault();\r\n    onContextMenuItemClick(todo.id);\r\n    setContextMenuVisibility(!isContextMenuOpen)\r\n  }\r\n\r\n  function onFocusOut() {\r\n    if (isInEditMode) {\r\n        setEditMode(false);\r\n        onEditTodo(todo.id, label);\r\n        setContextMenuVisibility(false);\r\n    }\r\n  }\r\n\r\n  function handleNameChange(e) {\r\n    setLabel(e.currentTarget.textContent);    \r\n  }\r\n\r\n  const editClass = isInEditMode ? 'mission-tracker-item-text-editable' : '';\r\n  const checkedClass = todo.complete ? 'checked' : '';\r\n\r\n  return (\r\n    <div className='mission-tracker-item-wrapper'>\r\n        <div className={`mission-tracker-item-checkbox-circle-line ${checkedClass}`}></div>\r\n        <div className='mission-tracker-item-checkbox-text-wrapper'>\r\n            <label className='mission-tracker-item-checkbox-wrapper' onClick={handleItemClick}>\r\n                <input style={{display:'none'}} type=\"checkbox\" checked={todo.complete} readOnly/>      \r\n                <div className={`mission-tracker-item-checkbox-circle ${checkedClass}`}></div>  \r\n            </label>            \r\n            <span className={`mission-tracker-item-text ${editClass}`}\r\n                  tabIndex={-1}\r\n                  onBlur={onFocusOut}\r\n                  ref={labelRef}\r\n                  contentEditable={isInEditMode}\r\n                  suppressContentEditableWarning={true}\r\n                  onInput={handleNameChange}>\r\n                      {todo.name}\r\n            </span>\r\n        </div>\r\n        {renderContextMenu()}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {useRef} from 'react';\r\n\r\nexport default function AddNewTodo(props) {\r\n  \r\n  const checkboxRef = useRef(null);\r\n\r\n  function handleAddClick() {\r\n    props.onAddTodo()\r\n    setTimeout(()=>checkboxRef.current.scrollIntoView(), 0)        \r\n  }\r\n\r\n  return (\r\n    <div className='mission-tracker-item-wrapper' ref={checkboxRef}>\r\n        <div className=\"mission-tracker-item-checkbox-circle-line\"></div>\r\n        <div>\r\n            <label className='mission-tracker-item-checkbox-wrapper'>\r\n                <input style={{display:'none'}} type=\"checkbox\" onChange={handleAddClick} readOnly/>      \r\n                <div className='mission-tracker-item-checkbox-circle add-new-todo'></div>  \r\n            </label>\r\n            <span className='mission-tracker-item-text'>{''}</span>\r\n        </div>        \r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\nimport AddNewTodo from './AddNewTodo';\r\nimport {useState, useEffect} from 'react';\r\n\r\nexport default function TodoList(props) {\r\n   \r\n  const [contextMenuOpenerId, setContextMenuOpenerId] = useState(null);\r\n\r\n  // useEffect(() => {\r\n  //   if (contextMenuOpenerId !== todo.id) {\r\n  //       setContextMenuVisibility(false);\r\n  //   }\r\n  // }, [contextMenuOpenerId])  \r\n\r\n  return (\r\n      <div className='mission-tracker-items'>\r\n          {\r\n            props.todos.map(todo => <Todo \r\n                                      key={todo.id} \r\n                                      onToggleTodo={props.onToggleTodo} \r\n                                      onEditTodo={props.onEditTodo}\r\n                                      onDeleteTodo={props.onDeleteTodo}\r\n                                      contextMenuOpenerId={contextMenuOpenerId}\r\n                                      onContextMenuItemClick={(id) => setContextMenuOpenerId(id)}\r\n                                      todo={todo} />\r\n            )\r\n          }\r\n          <AddNewTodo onAddTodo={props.onAddTodo}/>\r\n      </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport './missionTracker.css';\r\nimport closeIcon from '../../assets/images/close.svg';\r\nimport TodoList from './TodoList';\r\n\r\nexport default class MissionTracker extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            todos: [\r\n                {\r\n                    name: 'Cleared for takeoff',\r\n                    id: 1,\r\n                    isChecked: false\r\n                }, \r\n                {\r\n                    name: 'After take off', \r\n                    id: 2,\r\n                    isChecked: true\r\n                },\r\n                {\r\n                    name: 'Authorize to Cross', \r\n                    id: 3,\r\n                    isChecked: true\r\n                },\r\n            ]\r\n        }\r\n    }\r\n\r\n    onCloseClick = () => {\r\n\r\n    }\r\n\r\n    renderHeader() {\r\n        const missionName = `eagle 1`;\r\n\r\n        return (            \r\n            <div className='mission-tracker-header'>\r\n                <span className='mission-tracker-header-value'>{`${missionName} - Mission Status`}</span>\r\n                <button className='mission-tracker-close-btn'>\r\n                    <img className='mission-tracker-close-btn-img' src={closeIcon} alt='close' onClick={this.onCloseClick}/>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    toggleTodo = (id) => {\r\n        const newTodos = [...this.state.todos];\r\n        const todo = newTodos.find(todo => todo.id === id);\r\n        todo.complete = !todo.complete;\r\n        this.setState({todos: newTodos});\r\n    }\r\n    \r\n    addTodo = () => {\r\n        this.setState({\r\n            todos: [\r\n                ...this.state.todos, \r\n                { \r\n                    id: Math.round(Math.random() * 1000000), \r\n                    name: 'Rename this label', \r\n                    complete: false\r\n                }]\r\n        });\r\n      }\r\n    \r\n    deleteTodo = id => {\r\n        const newTodos = this.state.todos.filter(todo => id !== todo.id)\r\n        this.setState({todos: newTodos})\r\n    }\r\n\r\n    editTodo = (id, newLabel) => {\r\n        const {todos} = this.state;\r\n\r\n        const index = todos.findIndex(todo => id === todo.id);\r\n        \r\n        todos[index].name = newLabel\r\n\r\n        todos.splice(index, 1, todos[index]);  // array.splice(start, deleteCount, item1)\r\n\r\n        this.setState({todos});\r\n    }\r\n\r\n    renderBody() {\r\n        return (\r\n            <div className='mission-tracker-body'>\r\n                <TodoList todos={this.state.todos} \r\n                    onToggleTodo={this.toggleTodo} \r\n                    onDeleteTodo={this.deleteTodo}\r\n                    onEditTodo={this.editTodo}\r\n                    onAddTodo={this.addTodo}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderFooter() {\r\n        return (\r\n            <div className='mission-tracker-footer'>\r\n                <button className='mission-tracker-button'>Cancel</button>\r\n                <button className='mission-tracker-button mission-tracker-button-primary'>Apply</button>\r\n                <button className='mission-tracker-button mission-tracker-button-primary'>Save</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='mission-tracker-wrapper'>\r\n                {this.renderHeader()}\r\n                {this.renderBody()}\r\n                {this.renderFooter()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import './App.css';\nimport {MissionTracker} from './MissionTracker/src';\n\nfunction App() {\n  return (\n    <div className=\"App\">      \n        <MissionTracker />      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}